#!/bin/bash -el
# copy-site  - copies the published site
set -e

from="$1"
shift
targets="$@"

# Duplicate stdout/stderr to log (redirection requires bash)
exec > >(tee /var/log/site/copy_site.log)
exec 2>&1

rsync_copy() {
  local target="$1"
  rsync -aqz --copy-links --delete-after "${from}" "${target}"
}

s3_copy() {
  local target="$1"
  aws s3 sync --delete "${from}" "${target}"
}

copy_target() {
  local target="$1"
  case "${target}" in
    s3:*)
      s3_copy "${target}";;
    *)
      rsync_copy "${target}";;
  esac
}

copy_targets() {
  local targets="$1"
  for target in ${targets}; do
    status=0
    printf "INFO: Copying site to ${target} ... "
    set +e
    copy_target "${target}"
    result=$?
    if [ ${result} != 0 ]; then
      status=${result}
      printf "failed.\n"
    else
      printf "done.\n"
    fi
    set -e
  done
}

check_targets() {
  if [ -z "${targets}" ]; then
    echo "No targets specified for copy."
    return 1
  fi
}

check_files() {
  local files="index.html robots.txt sitemap.xml"
  for file in $files; do
    if [ ! -f "${from}/${file}" ]; then
      echo "No ${file} - not copying site."
      return 1
    fi
  done
}

check_targets
check_files
copy_targets "${targets}"
